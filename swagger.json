{
	"basePath": "/",
	"definitions": {
		"IUser": {
			"description": "",
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"name": {
					"type": "string",
					"description": ""
				},
				"createdAt": {
					"type": "string",
					"format": "date-time",
					"description": ""
				},
				"updatedAt": {
					"type": "string",
					"format": "date-time",
					"description": ""
				}
			},
			"type": "object",
			"required": [
				"name"
			]
		},
		"NotFoundError": {
			"description": "Represents a NOT FOUND error. The server has not found anything matching\nthe Request-URI. No indication is given of whether the condition is temporary\nor permanent. The 410 (GoneError) status code SHOULD be used if the server knows,\nthrough some internally configurable mechanism, that an old resource is permanently\nunavailable and has no forwarding address.\n\nThis error is commonly used when\nthe server does not wish to reveal exactly why the request has been refused,\nor when no other response is applicable.",
			"properties": {
				"message": {
					"type": "string",
					"description": ""
				},
				"statusCode": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"name": {
					"type": "string",
					"description": ""
				},
				"stack": {
					"type": "string",
					"description": ""
				}
			},
			"type": "object",
			"required": [
				"message",
				"statusCode",
				"name"
			]
		},
		"CountResponse": {
			"description": "",
			"properties": {
				"count": {
					"type": "number",
					"format": "double",
					"description": ""
				}
			},
			"type": "object",
			"required": [
				"count"
			]
		},
		"IProperty": {
			"description": "",
			"properties": {
				"id": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"name": {
					"type": "string",
					"description": ""
				},
				"minRent": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"maxRent": {
					"type": "number",
					"format": "double",
					"description": ""
				},
				"user": {
					"$ref": "#/definitions/IUser"
				},
				"createdAt": {
					"type": "string",
					"format": "date-time",
					"description": ""
				},
				"updatedAt": {
					"type": "string",
					"format": "date-time",
					"description": ""
				}
			},
			"type": "object",
			"required": [
				"name",
				"minRent",
				"maxRent",
				"user"
			]
		}
	},
	"info": {
		"description": "Node & GraphQL base starter - description",
		"license": {
			"name": "MIT"
		},
		"title": "Node & GraphQL base starter",
		"version": "1.0"
	},
	"paths": {
		"/users": {
			"get": {
				"operationId": "UsersList",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Retrieve a list of users.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/IUser"
							}
						}
					},
					"204": {
						"description": "No content",
						"examples": {
							"application/json": [
								null
							]
						}
					}
				},
				"description": "Recovers all active users",
				"tags": [
					"Users"
				],
				"parameters": []
			},
			"post": {
				"operationId": "UsersCreate",
				"produces": [
					"application/json"
				],
				"responses": {
					"201": {
						"description": "Created user",
						"schema": {
							"$ref": "#/definitions/IUser"
						}
					},
					"204": {
						"description": "No content"
					}
				},
				"description": "Creates a user",
				"tags": [
					"Users"
				],
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "user",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IUser"
						}
					}
				]
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "UsersShow",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Retrieve a user.",
						"schema": {
							"$ref": "#/definitions/IUser"
						}
					},
					"404": {
						"description": "User not found",
						"schema": {
							"$ref": "#/definitions/NotFoundError"
						}
					}
				},
				"description": "Recovers the user resource by its id",
				"tags": [
					"Users"
				],
				"parameters": [
					{
						"description": "user primary identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					}
				]
			},
			"patch": {
				"operationId": "UsersUpdate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Update the user that was sent",
						"schema": {
							"$ref": "#/definitions/IUser"
						}
					}
				},
				"description": "Updates the user",
				"tags": [
					"Users"
				],
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"description": "user primary identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"description": "",
						"in": "body",
						"name": "user",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IUser"
						}
					}
				]
			},
			"delete": {
				"operationId": "UsersDelete",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "User was deleted",
						"schema": {
							"$ref": "#/definitions/CountResponse"
						}
					}
				},
				"description": "Delete the user by its id",
				"tags": [
					"Users"
				],
				"parameters": [
					{
						"description": "user primary identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					}
				]
			}
		},
		"/properties": {
			"get": {
				"operationId": "PropertiesList",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Retrieve a list of properties.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/IProperty"
							}
						}
					},
					"204": {
						"description": "No content",
						"examples": {
							"application/json": [
								null
							]
						}
					}
				},
				"description": "Recovers all active properties",
				"tags": [
					"Properties"
				],
				"parameters": []
			},
			"post": {
				"operationId": "PropertiesCreate",
				"produces": [
					"application/json"
				],
				"responses": {
					"201": {
						"description": "Created property",
						"schema": {
							"$ref": "#/definitions/IProperty"
						}
					},
					"204": {
						"description": "No content"
					}
				},
				"description": "Creates a property",
				"tags": [
					"Properties"
				],
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"description": "",
						"in": "body",
						"name": "property",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IProperty"
						}
					}
				]
			}
		},
		"/properties/{id}": {
			"get": {
				"operationId": "PropertiesShow",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Retrieve a property.",
						"schema": {
							"$ref": "#/definitions/IProperty"
						}
					},
					"404": {
						"description": "property not found",
						"schema": {
							"$ref": "#/definitions/NotFoundError"
						}
					}
				},
				"description": "Recovers the property resource by its id",
				"tags": [
					"Properties"
				],
				"parameters": [
					{
						"description": "property primary identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					}
				]
			},
			"patch": {
				"operationId": "PropertiesUpdate",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "Update the property that was sent",
						"schema": {
							"$ref": "#/definitions/IProperty"
						}
					}
				},
				"description": "Updates the property",
				"tags": [
					"Properties"
				],
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"description": "property primary identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					},
					{
						"description": "",
						"in": "body",
						"name": "property",
						"required": true,
						"schema": {
							"$ref": "#/definitions/IProperty"
						}
					}
				]
			},
			"delete": {
				"operationId": "PropertiesDelete",
				"produces": [
					"application/json"
				],
				"responses": {
					"200": {
						"description": "property was deleted",
						"schema": {
							"$ref": "#/definitions/CountResponse"
						}
					}
				},
				"description": "Delete the property by its id",
				"tags": [
					"Properties"
				],
				"parameters": [
					{
						"description": "property primary identifier",
						"in": "path",
						"name": "id",
						"required": true,
						"type": "number",
						"format": "double"
					}
				]
			}
		}
	},
	"swagger": "2.0",
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "access_token",
			"in": "query"
		}
	},
	"host": "localhost:9090",
	"schemes": [
		"http"
	]
}